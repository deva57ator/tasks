name: Deploy STG (auto on push)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  deploy-stg:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.DEPLOY_HOST }}
      SSH_USER: ${{ secrets.DEPLOY_USER }}
      SSH_PORT: ${{ secrets.DEPLOY_PORT }}
      PATH_STG:  ${{ secrets.DEPLOY_PATH_STG }}      # /srv/tasks-stg
      WEB_STG:   ${{ secrets.DEPLOY_WEB_PATH_STG }}  # /var/www/tasks-stg

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add host key
        shell: bash
        run: |
          : "${SSH_PORT:=22}"
          mkdir -p ~/.ssh
          ssh-keyscan -p "${SSH_PORT}" -H "${SSH_HOST}" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      # === API → STG ===
      - name: Copy API to STG (/srv/tasks-stg)
        shell: bash
        run: |
          : "${SSH_PORT:=22}"
          rsync -av --delete -e "ssh -p ${SSH_PORT}" \
            --filter='merge infra/rsync/api.filter' \
            ./ "${SSH_USER}@${SSH_HOST}:${PATH_STG}-tmp/"

          # Всё ниже выполняется удалённо в одном bash-сеансе
          ssh -p "${SSH_PORT}" "${SSH_USER}@${SSH_HOST}" DEPLOY_PATH="${PATH_STG}" bash -seu <<'EOSH'
          set -euo pipefail

          # Перекладываем дерево
          rm -rf "$DEPLOY_PATH/apps/api"
          install -d "$DEPLOY_PATH/apps"
          mv "${DEPLOY_PATH}-tmp/apps/api" "$DEPLOY_PATH/apps/"
          rm -rf "${DEPLOY_PATH}-tmp"

          # Шим для systemd: /srv/.../src/server.js → apps/api/src/server
          install -d "$DEPLOY_PATH/src"
          cat >"$DEPLOY_PATH/src/server.js" <<'JS'
          require('../apps/api/src/server');
          JS

          # Зависимости из корня: node_modules → apps/api/node_modules
          ln -sfn "$DEPLOY_PATH/apps/api/node_modules" "$DEPLOY_PATH/node_modules"
          EOSH

      - name: Install deps, migrate, restart
        shell: bash
        run: |
          : "${SSH_PORT:=22}"
          ssh -p "${SSH_PORT}" "${SSH_USER}@${SSH_HOST}" DEPLOY_PATH="${PATH_STG}" bash -seu <<'EOSH'
          set -euo pipefail
          cd "$DEPLOY_PATH/apps/api"
          npm ci --omit=dev --no-audit --no-fund || npm install --omit=dev --no-audit --no-fund
          npm run migrate
          sudo -n systemctl daemon-reload || true
          sudo -n systemctl restart tasks-stg

          # Ретраи локального health
          for i in 1 2 3 4 5; do
            sleep 2
            curl -fsS http://127.0.0.1:3102/api/health >/dev/null && exit 0 || true
          done
          systemctl status --no-pager tasks-stg || true
          journalctl -u tasks-stg -n 100 --no-pager || true
          exit 1
          EOSH

      # === WEB → STG ===
      - name: Rsync WEB
        shell: bash
        run: |
          : "${SSH_PORT:=22}"
          rsync -av --delete -e "ssh -p ${SSH_PORT}" \
            apps/web/ "${SSH_USER}@${SSH_HOST}:${WEB_STG}/"

      - name: External health (via Nginx)
        shell: bash
        run: |
          for i in 1 2 3; do
            curl -fsS https://parkhomenko.space/tasks-stg/api/health >/dev/null && exit 0 || true
            sleep 2
          done
          exit 22
